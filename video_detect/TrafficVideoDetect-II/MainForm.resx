<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip_Main.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAkAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAARERMAL7ExQAzMzQAXkxPAKutqwCGhYwAPjs8AMjCzACjo6MANDo8AFpYXADT1NQAdnV8ANvT
        9wCYlZgAy8zMAJSTlABmWVsAkpGSAMzT1AC1pPIAwsvKAMPJywCgoqQAsbKyAFUp5AB8e3wAmKKcALzB
        xADx8PoAdHN0ALS7vACjqqQApaamALS1vADJysQAPTY8AGRjZABkXWQAubq0ANPW3AD59vwAr620AMTC
        vAC7wb0AVTI6AM3NzAD8/vwAoaWmAMbJxQD6/PoAvKq0AIyNlAD0+vQARENEAI1w7AA8REYAfW10AFtj
        aQDEzdQAbHN3AMbGzADp6OkAnJSUAMnOzADc1twAzsL2AKON7wBkZWwAyMrIAG9tdAClo6EAxMTEAFRd
        XADBwsEAfHR0ALy8vAC8trwAOjtFAIWBhAC0tLQAl4SJAKyurACsqqwArKasAEsc4wDIy8wAKigrAH9n
        agCzuboAxcnJAKSkpACwt7cAnKOmAG1rbAA0NTwAnJycAJyWnACWlpYAW1xkAJOSkwDU3NwAlI6UAJCQ
        kACOjo4AjIyMAIqKigCAhpQAQj1EAPLu9ADHzs8AuLm5AMTOzADEyswATUtMADw0NAC/xscA9fT0AL+/
        vQB0enQAoKGhAGxmbACssrQA1NPMAG5jZADAu7sAmJmZACssNACkqqwApKasANXU1ADEvbwAqayuAMrM
        yQB8hIcAjJSUAExGTACwtrIAeXyEAMW+xADBwMAAhIqMAMvN0QBzT+kAxsvMAKyYmgDEwsAArbKsAHR8
        fAA0LjQA08bMAFBNVAAaGB0A3NvcAGRsbAAjICMApKy0AMzTzACUm50Ak5WcAMjHyACEeXwAnp2kAE1C
        RACboaEAoJ6cABAOEACtr7AAVlNUAM3O1ADg3uQAuru6ADgGDQCXlJMA2tvUAMLIyQCzs7MAREpMAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDBEMEQwHjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMENWVjAwVjAwMFYwMFZWVlYwRDAw
        VjBWVjAwMDAwMDAwMDAwMDAwMDAwMFZWMDBWVkQwMDAwMDAwMFYwMJAwMFYwkDAwGjgwMFYwVlY4VlYw
        kDAwMDAwMDCQVjAwDlYwVjAwMDAwMFYwMFYwMFYwMFYwVjAwkDAwMFYwVjBWMDBWMFYwMDAwMDBWMDAw
        MA4wMFYwMDAwMFYwMEMwMDBWVlYwVjAwRDBWVg4wRDBWVjBWMFYwMDAwMDAwVjAwVlZWMDAOHjAwMDgw
        MDAVMBowMFYwVjAwRJAwMDAwMDAwMDgVODAwMDAwMDAwMFYwMDAwMDAwMFYwMDBWMDAOVjBWVlYwVlZW
        MDBWVjBWVjBWVlYwVhowMDAwMDAwMDBWDjAVkDAwMDBWMENWQ0MwMDAwMDAwMDAwMDAwMDBDMDA/L4Mw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFFRTUmfcjAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwVFFNjEmqXjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDBTK1FNSYM/lzUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDCBlFFNL2cfNjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDCgDQ0NDWejXChcZ2pTLwSV
        MDUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYAMDoEd6egtqNWc1bA1Qqh9NMAY/MDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwP6ecqno7C3o1NTU1UEdkZj8wMIsrMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwZJmnERJ9X5thXiFeER+YcT8wMB80MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNVgAJQcH
        pCVMUGpnUF+kPz8wMF+qMDAwMDAwMDAwMDAwMDAwMDArqjAwMDAwMDA/hzc3ByUHN3NfX0UmC4lPbikw
        MKIwMDAwMDAwMDAwMDAwMDAwjCARhGobahGaMJuHlaQrizAvZ1SSkqNhan2YoiOaMKIwMDAwMDAwMDAw
        MDAwMDBNOQNYBx1FH0cNRwt6WYhQDTAwMDAwjIijGxEEC2dRP0wwMDAwMDAwMDAwMDAwMD8nmXOyCj6i
        X0dHOh8NXy47aj8wMDAwMEdHJwEliUdqSn0wMDAwMDAwMDAwMDAwME4SHaJPT31hHw1HDUcNojpSogYw
        MDAwMEdHegFtAScbHyowMDAwMDAwMDAwMDAwZjlYmG1tAQN7UItQi6KiPXicUKIGJzAwMHp6C5xPAQtV
        DTAwMDAwMDAwMDAwMDAwTXRFc21tATdqiIg1BgaHi4utjo5QH0WrMDBHqQMHAQ1NMDAwMDAwMDAwMDAw
        MDAwSVhKYG0+Bz2bXoJTXp+foDWtNTVqahtFCDAwmHM3fUkwMDAwMDAwMDAwMDAwMDAwUKejYGAHdC07
        UGF7K4F7XIKtgRxqiI4bRTAwMDCqdjAwMDAwMDAwMDAwMDAwMDAwQJmHQGFho1NTICByHR1xEI9ycYNa
        Xp+Oh18wMDAwMDAwMDAwMDAwMDAwMDAwMDAwU5ZQh2pSZ4hhXJ2UUU0gAkYWV0EyWxY8Xoc9MzAwMDAw
        MDAwMDAwMDAwTXonEhJtgVxioBFqBmpqERFho4F7GSAgHRcXdYZvjxAULz8wMDAwMDAwMDAwMDCLDXon
        EqltP1FRU1yjYRERampqapJ/Y3+lhYGFTS0XsBeRFJ4UPzAwMDAwMDAwMDCahz1HRQs/g54vJElNTXuB
        XByIiBETEWpqZWURpjGFqF0dci8UmjAwMDAwMDAwMDAwTR8fX4MpZoNCKYMUnnI+SSB7VCIxHGGIEWhq
        amppD395qEtycjAwMDAwMDAwMDAwMDCrLy+qg5qaQpqvr6+Dg3wvSYR3rLEFIhh5YYgREWprfwl7TTAw
        MDAwMDAwMDAwMDAwMDAwMINJLy+DQoOar0JCg4ODDJFySX5wGVQJeQlhrhERdjAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwPyRyg4OvmoODg5qamq98L6GTjayKSGGSMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDA+WGADm3Kvmpqvr0KDfHwvLE1uMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMKCAlS8kL4OD
        mpqamq9Cgz8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2KjAwMDAwPy+DqpqaMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
        MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>